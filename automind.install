#!/bin/bash
# tested on Ubuntu 22.04.6 LTS and Manjaro users choose no to update system

# automind (c) 2023 codephreak MIT license

# requirements Linux sudo
# recognizes user shell bash zsh fish powershell csh
# this script promptes user to update system to current
# checks for conda and updates or installs conda
# actives automind conda environment
# runs conda init USER_SHELL
# clones automind and enters directory
# installs automind with default model llama-2-7b-chat-codeCherryPop.ggmlv3.q4_1.bin
# launches boilerplate Gradio instruction response and expose API to localhost and globalhost
# Professor Codephreak is ...

# Detect user's shell and set shell initialization file
USER_SHELL=$(env | grep SHELL | awk -F'=' '{print $2}')
if [[ "$USER_SHELL" == *"bash"* ]]; then
    INIT_FILE=".bashrc"
elif [[ "$USER_SHELL" == *"zsh"* ]]; then
    INIT_FILE=".zshrc"
elif [[ "$USER_SHELL" == *"fish"* ]]; then
    INIT_FILE=".config/fish/config.fish"
elif [[ "$USER_SHELL" == *"powershell"* ]]; then
    INIT_FILE="Microsoft.PowerShell_profile.ps1"
elif [[ "$USER_SHELL" == *"csh"* ]]; then
    INIT_FILE=".cshrc"
else
    echo "Unsupported shell: $USER_SHELL"
    exit 1
fi

# Add Script Directories to PATH
echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/$INIT_FILE
source ~/$INIT_FILE

# Ask user if they want to upgrade the system
read -p "Would you like to upgrade your apt based system? (y/n): " UPGRADE_SYSTEM
if [[ $UPGRADE_SYSTEM == "y" || $UPGRADE_SYSTEM == "Y" ]]; then
    sudo apt-get update
    sudo apt-get upgrade -y
    echo "System upgrade completed."
else
    echo "Skipping system upgrade."
fi

# Check if Miniconda is already installed
if ! command -v conda &> /dev/null; then
    # Download and install Miniconda
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    sudo ./Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda3
    echo 'export PATH="$HOME/miniconda3/bin:$PATH"' >> source ~/$INIT_FILE
    source source ~/$INIT_FILE
    # Change ownership of the miniconda3 directory to the user
    sudo chown -R $USER:$USER $HOME/miniconda3
else
    echo "Miniconda is already installed. Updating Conda..."
    conda update -y conda
fi

source ~/$INIT_FILE

# show details of the conda install
conda --version

# Create automind miniconda environment
conda create --name automind python=3.9.1 -y
source ~/$INIT_FILE
# Activate automind miniconda enviroment
conda activate automind
# Display miniconda environment list to terminal output
conda env list

# Initialize miniconda from the detected shell
echo "Initializing Miniconda for $USER_SHELL..."
conda init $USER_SHELL
source ~/$INIT_FILE

# Check if pip is installed
if ! command -v pip &> /dev/null; then
    echo "pip is not installed. Installing pip..."
    
    # Install pip using sudo apt
    sudo apt install python3-pip
    echo "pip installed successfully."
else
    echo "pip is already installed."
fi

# Install gradio and psutil
pip install gradio psutil fire

# Clone the 'automind' repository and install its requirements
git clone https://github.com/Professor-Codephreak/automind
cd automind
pip install --upgrade pip
pip --version
pip install -r requirements.txt

# Run UIUX
python uiux.py --model_name="TheBloke/llama2-7b-chat-codeCherryPop-qLoRA-GGML" --tokenizer_name="TheBloke/llama2-7b-chat-codeCherryPop-qLoRA-GGML" --model_type="ggml" --save_history --file_name="llama-2-7b-chat-codeCherryPop.ggmlv3.q4_1.bin"

#README currently loads with Bash shell. todo: add shell read to install
#two terminal inputs for deployment make automind.install exectuable and open with bash

#chmod +x automind.install && ./automind.install
